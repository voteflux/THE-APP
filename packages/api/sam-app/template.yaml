# Autogenerated!
Description: flux sam-app stack
Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  pNamePrefix:
    Type: String
  pHostedZoneId:
    Type: String
  pSubdomain:
    Type: String
  pDomain:
    Type: String
  pCertificateArn:
    Type: String
  pStage:
    Type: String
  pFeedbackEmail:
    Type: String
  pQandaFromEmail:
    Type: String
  pSiteNameShort:
    Type: String
  pBaseUrl:
    Type: String
Conditions:
  cIsProd:
    Fn::Equals:
      - Ref: pStage
      - prod
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Globals:
  Function:
    Timeout: 120
    MemorySize: 256
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Referer'"
      AllowOrigin: "'*'"
    EndpointConfiguration: REGIONAL
Resources:
  rBaseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${pNamePrefix}-function-base-layer
      ContentUri: s3://flux-sam-app-api-dev-sam-cf-artifacts/dbc6464f743f19040a2fe11d99fd850b
      CompatibleRuntimes:
        - python3.6
  rCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://flux-sam-app-api-dev-sam-cf-artifacts/dd55d11d1474c39562b29620bfe1c780
      Handler: index.cors
      Runtime: python3.6
      Role:
        Fn::GetAtt:
          - rCorsFuncRole
          - Arn
      Events:
        CorsOption:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: options
  rCorsFuncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pNamePrefix}-cors-lambda-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
  rQandaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://flux-sam-app-api-dev-sam-cf-artifacts/f6373d191d360bef3668d1e65d63e066
      Handler: index.qanda
      Runtime: python3.6
      Role:
        Fn::GetAtt:
          - rQandaFuncRole
          - Arn
      Layers:
        - Ref: rBaseLayer
      Environment:
        Variables:
          MONGODB_URI: ""
          pNamePrefix:
            Ref: pNamePrefix
          pQandaFromEmail:
            Ref: pQandaFromEmail
          pSiteNameShort:
            Ref: pSiteNameShort
          pFeedbackEmail:
            Ref: pFeedbackEmail
          pBaseUrl:
            Ref: pBaseUrl
      Events:
        GetMyQs:
          Type: Api
          Properties:
            Path: /qanda/getMine
            Method: post
        SubmitQ:
          Type: Api
          Properties:
            Path: /qanda/submit
            Method: post
        SubmitReply:
          Type: Api
          Properties:
            Path: /qanda/submitReply
            Method: post
        GetAllQs:
          Type: Api
          Properties:
            Path: /qanda/get
            Method: get
        GetQ:
          Type: Api
          Properties:
            Path: /qanda/question/{qid}
            Method: get
        GetReplyIds:
          Type: Api
          Properties:
            Path: /qanda/replyIds/{qid}
            Method: get
        GetReply:
          Type: Api
          Properties:
            Path: /qanda/reply/{rid}
            Method: get
  rQandaFuncPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${pNamePrefix}-qanda-lambda-policy
      Roles:
        - Ref: rQandaFuncRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:DecryptParameter
            Resource:
              - Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${pNamePrefix}-mongodb-uri
          - Effect: Allow
            Action:
              - dynamodb:*
            Resource:
              - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${pNamePrefix}-qanda-*
          - Effect: Allow
            Action:
              - ses:SendEmail
            Resource:
              - Fn::Sub: arn:aws:ses:us-east-1:${AWS::AccountId}:identity/${pQandaFromEmail}
  rQandaFuncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pNamePrefix}-qanda-lambda-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
  rUserQuestionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${pNamePrefix}-qanda-user-qs-ddb
      ProvisionedThroughput:
        Fn::If:
          - cIsProd
          - Ref: AWS::NoValue
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      PrimaryKey:
        Name: uid
        Type: String
      SSESpecification:
        SSEEnabled: true
  rQuestionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${pNamePrefix}-qanda-questions-ddb
      ProvisionedThroughput:
        Fn::If:
          - cIsProd
          - Ref: AWS::NoValue
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      PrimaryKey:
        Name: qid
        Type: String
      SSESpecification:
        SSEEnabled: true
  rReplyIdsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${pNamePrefix}-qanda-reply-ids-ddb
      ProvisionedThroughput:
        Fn::If:
          - cIsProd
          - Ref: AWS::NoValue
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      PrimaryKey:
        Name: qid
        Type: String
      SSESpecification:
        SSEEnabled: true
  rReplyIdsByUidTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${pNamePrefix}-qanda-reply-ids-by-uid-ddb
      ProvisionedThroughput:
        Fn::If:
          - cIsProd
          - Ref: AWS::NoValue
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      PrimaryKey:
        Name: qid
        Type: String
      SSESpecification:
        SSEEnabled: true
  rRepliesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${pNamePrefix}-qanda-replies-ddb
      ProvisionedThroughput:
        Fn::If:
          - cIsProd
          - Ref: AWS::NoValue
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      PrimaryKey:
        Name: rid
        Type: String
      SSESpecification:
        SSEEnabled: true
  rApiDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName:
        Fn::Sub: api.${pSubdomain}.${pDomain}
      RegionalCertificateArn:
        Ref: pCertificateArn
      EndpointConfiguration:
        Types:
          - REGIONAL
  rApiDomainRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name:
        Fn::Sub: api.${pSubdomain}.${pDomain}.
      HostedZoneName:
        Fn::Sub: ${pDomain}.
      AliasTarget:
        DNSName:
          Fn::GetAtt:
            - rApiDomain
            - RegionalDomainName
        HostedZoneId:
          Fn::GetAtt:
            - rApiDomain
            - RegionalHostedZoneId
      Type: A
  rQandaApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName:
        Ref: rApiDomain
      RestApiId:
        Ref: ServerlessRestApi
      Stage:
        Ref: ServerlessRestApi.Stage
  ddbbackupvaultB616DEFE:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: cdkddbbackupvaultD0FCA07C
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cdk/ddb-backup-vault/Resource
  oauthddbsbackup980146D8:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: backup
        BackupPlanRule:
          - Lifecycle:
              DeleteAfterDays: 35
            RuleName: Daily
            ScheduleExpression: cron(0 5 * * ? *)
            TargetBackupVault:
              Fn::GetAtt:
                - oauthddbsbackupVault72BBC8AD
                - BackupVaultName
          - Lifecycle:
              DeleteAfterDays: 90
            RuleName: Weekly
            ScheduleExpression: cron(0 5 ? * SAT *)
            TargetBackupVault:
              Fn::GetAtt:
                - oauthddbsbackupVault72BBC8AD
                - BackupVaultName
          - Lifecycle:
              DeleteAfterDays: 1825
              MoveToColdStorageAfterDays: 90
            RuleName: Monthly5Year
            ScheduleExpression: cron(0 5 1 * ? *)
            TargetBackupVault:
              Fn::GetAtt:
                - oauthddbsbackupVault72BBC8AD
                - BackupVaultName
          - Lifecycle:
              DeleteAfterDays: 35
            RuleName: Daily
            ScheduleExpression: cron(0 5 * * ? *)
            TargetBackupVault:
              Fn::GetAtt:
                - ddbbackupvaultB616DEFE
                - BackupVaultName
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/backup/Resource
  oauthddbsbackupVault72BBC8AD:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: cdkoauthddbsbackupVault30AF690E
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/backup/Vault/Resource
  oauthddbsbackupselectionRoleE920781D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: backup.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/backup/selection/Role/Resource
  oauthddbsbackupselection8FB78461:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId:
        Fn::GetAtt:
          - oauthddbsbackup980146D8
          - BackupPlanId
      BackupSelection:
        IamRoleArn:
          Fn::GetAtt:
            - oauthddbsbackupselectionRoleE920781D
            - Arn
        Resources:
          - Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":dynamodb:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :table/
                - Ref: pNamePrefix
                - -oauth-client-apps-ddb
          - Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":dynamodb:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :table/
                - Ref: pNamePrefix
                - -oauth-grants-ddb
          - Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":dynamodb:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :table/
                - Ref: pNamePrefix
                - -oauth-users-ddb
          - Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":dynamodb:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :table/
                - Ref: pNamePrefix
                - -oauth-bearer-tokens-ddb
        SelectionName: selection
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/backup/selection/Resource
  oauthddbsoauthclientappsddbsimtable5E81AFCF:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: client_id
        Type: String
      SSESpecification:
        SSEEnabled: true
      TableName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-client-apps-ddb
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/oauth-client-apps-ddb-sim_table
  oauthddbsoauthgrantsddbsimtableFD179496:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      SSESpecification:
        SSEEnabled: true
      TableName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-grants-ddb
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/oauth-grants-ddb-sim_table
  oauthddbsoauthusersddbsimtable83EB9B28:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      SSESpecification:
        SSEEnabled: true
      TableName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-users-ddb
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/oauth-users-ddb-sim_table
  oauthddbsoauthbearertokensddbsimtable86B62A9B:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      SSESpecification:
        SSEEnabled: true
      TableName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-bearer-tokens-ddb
    Metadata:
      aws:cdk:path: cdk/oauth-ddbs/oauth-bearer-tokens-ddb-sim_table
  frole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-lambda-role
    Metadata:
      aws:cdk:path: cdk/f-role
  fpolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:GetParameter
              - ssm:DecryptParameter
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/
                  - Ref: pNamePrefix
                  - -mongodb-uri
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :table/
                  - Ref: pNamePrefix
                  - -oauth-*
        Version: "2012-10-17"
      PolicyName:
        Fn::Join:
          - ""
          - - Ref: pNamePrefix
            - -oauth-lambda-policy
      Roles:
        - Fn::GetAtt:
            - frole
            - Arn
    Metadata:
      aws:cdk:path: cdk/f-policy
  oauthfunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./funcs/oauth
      Handler: handlers.main
      Runtime: python3.6
      Environment:
        Variables:
          pNamePrefix:
            Ref: pNamePrefix
      Events:
        OauthAuthzGet:
          Properties:
            Method: get
            Path: /oauth/authorize
          Type: Api
        OauthAuthzPost:
          Properties:
            Method: post
            Path: /oauth/authorize
          Type: Api
      Layers:
        - Ref: rBaseLayer
      Role:
        Ref: frole
    Metadata:
      aws:cdk:path: cdk/oauth-func
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.62.0,@aws-cdk/assets=1.62.0,@aws-cdk/aws-apigateway=1.62.0,@aws-cdk/aws-applicationautoscaling=1.62.0,@aws-cdk/aws-autoscaling-common=1.62.0,@aws-cdk/aws-backup=1.62.0,@aws-cdk/aws-certificatemanager=1.62.0,@aws-cdk/aws-cloudformation=1.62.0,@aws-cdk/aws-cloudwatch=1.62.0,@aws-cdk/aws-codeguruprofiler=1.62.0,@aws-cdk/aws-dynamodb=1.62.0,@aws-cdk/aws-ec2=1.62.0,@aws-cdk/aws-efs=1.62.0,@aws-cdk/aws-elasticloadbalancingv2=1.62.0,@aws-cdk/aws-events=1.62.0,@aws-cdk/aws-iam=1.62.0,@aws-cdk/aws-kms=1.62.0,@aws-cdk/aws-lambda=1.62.0,@aws-cdk/aws-logs=1.62.0,@aws-cdk/aws-rds=1.62.0,@aws-cdk/aws-route53=1.62.0,@aws-cdk/aws-s3=1.62.0,@aws-cdk/aws-s3-assets=1.62.0,@aws-cdk/aws-sam=1.62.0,@aws-cdk/aws-secretsmanager=1.62.0,@aws-cdk/aws-sns=1.62.0,@aws-cdk/aws-sqs=1.62.0,@aws-cdk/aws-ssm=1.62.0,@aws-cdk/cloud-assembly-schema=1.62.0,@aws-cdk/core=1.62.0,@aws-cdk/custom-resources=1.62.0,@aws-cdk/cx-api=1.62.0,@aws-cdk/region-info=1.62.0,jsii-runtime=Python/3.6.10
    Condition: CDKMetadataAvailable
Outputs:
  oQandaFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
        - rQandaFunction
        - Arn

